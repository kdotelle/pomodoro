{"version":3,"sources":["components/TimerComponent.js","components/BreakController.js","components/WorkController.js","components/TimerControlComponent.js","App.js","reportWebVitals.js","index.js"],"names":["formatTime","time","minutes","Math","floor","seconds","Timer","className","this","props","session","onChange","setCurrentTime","currentTime","Component","BreakController","onClick","onDecrementBreak","break","onIncrementBreak","WorkController","onDecrementWork","work","onIncrementWork","TimerControl","breakTime","workTime","reset","start","status","App","resetClock","setState","cycle","setSession","incrementBreakTime","state","decrementBreakTime","incrementWorkTime","decrementWorkTime","startTimer","timerRunning","timerId","clearInterval","setInterval","decreaseTimer","changeCycle","timer","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28572e8b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n//clock will countdown\n//clock will cycle between active sessions and breaks\n//clock should show which cycle it is currently in\n//state will be passed as props but will be held in the parent component\n\nconst formatTime = (time) => {\n  let minutes = Math.floor(time / 60);\n  let seconds = time % 60;\n  return (\n    (minutes < 10 ? \"0\" + minutes : minutes) +\n    \":\" +\n    (seconds < 10 ? \"0\" + seconds : seconds)\n  );\n};\nclass Timer extends Component {\n  render() {\n    return (\n      <div className=\"clock\">\n        <span className=\"session\">{this.props.session}</span>\n        <p onChange={this.props.setCurrentTime}>\n          {\" \"}\n          {formatTime(this.props.currentTime)}{\" \"}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\n\nclass BreakController extends Component {\n  render() {\n    return (\n      <div>\n        <button onClick={this.props.onDecrementBreak}> - </button>\n        <span> {this.props.break} </span>\n        <button onClick={this.props.onIncrementBreak}> + </button>\n      </div>\n    );\n  }\n}\n\nexport default BreakController;\n","import React, { Component } from \"react\";\n\nclass WorkController extends Component {\n  render() {\n    return (\n      <div>\n        <button onClick={this.props.onDecrementWork}> - </button>\n        <span> {this.props.work} </span>\n        <button onClick={this.props.onIncrementWork}> + </button>\n      </div>\n    );\n  }\n}\n\nexport default WorkController;\n","import React, { Component } from \"react\";\nimport BreakController from \"./BreakController\";\nimport WorkController from \"./WorkController\";\n\n//controls should have an option for break length and active session length\n//default should be 5 min break 20 min session\n//timer should have a reset button\n\nclass TimerControl extends Component {\n  render() {\n    return (\n      <div className=\"controls\">\n        <p> Timer Controls </p>\n\n        <BreakController\n          break={this.props.breakTime}\n          onIncrementBreak={this.props.onIncrementBreak}\n          onDecrementBreak={this.props.onDecrementBreak}\n        />\n        <WorkController\n          work={this.props.workTime}\n          onIncrementWork={this.props.onIncrementWork}\n          onDecrementWork={this.props.onDecrementWork}\n        />\n\n        <button onClick={this.props.reset}> Reset </button>\n        <button onClick={this.props.start}> {this.props.status} </button>\n      </div>\n    );\n  }\n}\n\nexport default TimerControl;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Timer from \"./components/TimerComponent\";\nimport TimerControl from \"./components/TimerControlComponent\";\n\n//state is held here and will be passed to the children\n//state should hold the session cycle and\n//function to increase time on timer and decrease time on timer\n//should have a start/stop button to stop and start the timer countdown\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timerRunning: false,\n      status: \"Start\",\n      currentTime: 25 * 60,\n      cycle: \"Session\",\n      breakTime: 5,\n      workTime: 25,\n      timerId: null,\n    };\n  }\n\n  resetClock = () => {\n    this.setState({\n      cycle: \"Session\",\n      currentTime: 25 * 60,\n      breakTime: 5,\n      workTime: 25,\n    });\n  };\n\n  setSession = () => {\n    this.setState({\n      cycle: \"Session\",\n    });\n  };\n\n  incrementBreakTime = () => {\n    if (this.state.cycle === \"Break\") {\n      this.setState({\n        breakTime: this.state.breakTime + 1,\n        currentTime: (this.state.breakTime + 1) * 60,\n      });\n    } else {\n      this.setState({\n        breakTime: this.state.breakTime + 1,\n      });\n    }\n  };\n\n  decrementBreakTime = () => {\n    if (this.state.breakTime > 0) {\n      if (this.state.cycle === \"Break\") {\n        this.setState({\n          breakTime: this.state.breakTime - 1,\n          currentTime: (this.state.breakTime - 1) * 60,\n        });\n      } else {\n        this.setState({\n          breakTime: this.state.breakTime - 1,\n        });\n      }\n    }\n  };\n\n  incrementWorkTime = () => {\n    if (this.state.cycle === \"Session\") {\n      this.setState({\n        workTime: this.state.workTime + 1,\n        currentTime: (this.state.workTime + 1) * 60,\n      });\n    } else {\n      this.setState({\n        workTime: this.state.workTime + 1,\n      });\n    }\n  };\n\n  decrementWorkTime = () => {\n    if (this.state.workTime > 0) {\n      if (this.state.cycle === \"Session\") {\n        this.setState({\n          workTime: this.state.workTime - 1,\n          currentTime: (this.state.workTime - 1) * 60,\n        });\n      } else {\n        this.setState({\n          workTime: this.state.workTime - 1,\n        });\n      }\n    }\n  };\n\n  startTimer = () => {\n    this.setState({ timerRunning: true });\n\n    if (!this.state.timerRunning) {\n      this.setState({\n        timerRunning: !this.state.timerRunning,\n        status: \"Stop\",\n        timerId: setInterval(() => {\n          this.decreaseTimer();\n          this.changeCycle();\n        }, 1000),\n      });\n    } else {\n      this.state.timerId && clearInterval(this.state.timerId);\n      this.setState({\n        timerRunning: !this.state.timerRunning,\n        status: \"Start\",\n        timerId: null,\n      });\n    }\n  };\n\n  changeCycle = () => {\n    if (this.state.currentTime === -1) {\n      if (this.state.cycle === \"Session\") {\n        this.setState({\n          cycle: \"Break\",\n          currentTime: this.state.breakTime * 60,\n        });\n      } else {\n        this.setState({\n          cycle: \"Session\",\n          currentTime: this.state.workTime * 60,\n        });\n      }\n    }\n  };\n\n  decreaseTimer = () => {\n    this.setState({\n      currentTime: this.state.currentTime - 1,\n    });\n  };\n\n  timer = () => {\n    if (this.state.timerRunning) {\n      clearInterval(this.state.timerId);\n      this.setState({\n        timerRunning: false,\n        status: \"Start\",\n      });\n    } else {\n      this.setState({\n        timerRunning: true,\n        status: \"Stop\",\n      });\n      this.state.cycle === \"Session\"\n        ? this.startTimer(this.state.workTime)\n        : this.startTimer(this.state.breakTime);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> Pomodoro Clock </h1>\n        </header>\n        <Timer\n          session={this.state.cycle}\n          currentTime={this.state.currentTime}\n        />\n        <div id=\"control-wrapper\">\n          <TimerControl\n            breakTime={this.state.breakTime}\n            workTime={this.state.workTime}\n            onIncrementBreak={this.incrementBreakTime}\n            onDecrementBreak={this.decrementBreakTime}\n            onIncrementWork={this.incrementWorkTime}\n            onDecrementWork={this.decrementWorkTime}\n            setCurrentTime={this.setCurrentTime}\n            status={this.state.status}\n            reset={this.resetClock}\n            start={this.startTimer}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}